/**
 * File Generated by Sideko (sideko.dev)
 */
import {
  CoreResourceClient,
  CoreClient,
  RequestOptions,
  ApiPromise,
} from "visa_click_to_pay/core";
import * as requests from "visa_click_to_pay/resources/wallet/src/transaction/credentials/request-types";
import * as types from "visa_click_to_pay/types";
import qs from "qs";

export class CredentialsClient extends CoreResourceClient {
  // register resources (keep comment for code generation)

  constructor(client: CoreClient) {
    super(client);

    // init resources (keep comment for code generation)
  }

  // register api methods (keep comment for code generation)

  /**
   * no description available
   */
  list(
    request: requests.ListRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.IntentUpdateSrcResponse> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "get",
      path: "/wallet/src/transaction/credentials",
      query: [
        qs.stringify({ payloadTypeIndicator: request.payloadTypeIndicator }),
        qs.stringify({ recipientId: request.recipientId }),
        qs.stringify({ serviceId: request.serviceId }),
        qs.stringify({ srcClientId: request.srcClientId }),
        qs.stringify({ srcCorrelationId: request.srcCorrelationId }),
        qs.stringify({ srcDpaId: request.srcDpaId }),
        qs.stringify({ srciTransactionId: request.srciTransactionId }),
      ],
      responseType: "json",
      opts,
    });
  }
}
